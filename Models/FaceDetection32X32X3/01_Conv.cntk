RootDir = "."

ConfigDir = "$RootDir$"
DataDir = "$RootDir$"
OutputDir = "$RootDir$/Output"
ModelDir = "$OutputDir$/Models"

ndlMacros = "$ConfigDir$/Macros.ndl"

precision = "float"
deviceId = 0
imageLayout = "cudnn"
# override the above as follows when running on CPU:
# deviceId = -1

# If set to true, always initialize the network on CPU, making initialization consistent across CPU and GPU targets (for testing).
initOnCPUOnly=true

command = Train

modelPath = "$ModelDir$/01_Convolution2"

#stderr = "$OutputDir$/01_Conv"
traceLevel = 1
numMBsToShowResult = 50

Train = [
    action = "train"

     NDLNetworkBuilder = [
        networkDescription = "$ConfigDir$/01_Convolution2.ndl"
    ]
    
    SGD = [
        epochSize = 0
        minibatchSize = 128
        learningRatesPerMB = 0.001*20:0.0003*10:0.0001*10:0.00001
        momentumPerMB = 0.9
        maxEpochs = 3000
        L2RegWeight = 0.03
        dropoutRate = 0.5
    ]
    
     reader = [
        readerType = "UCIFastReader"
        file = "$DataDir$/facedetector32X32X3V2.txt"
        randomize = "auto"
        # Setting minibatchMode="full" is a temporary fix to prevent an exception until the reader is migrated to the new reader.
        minibatchMode="full"
        features = [
            dim = 3072
            start = 1
        ]
        labels = [
            dim = 1
            start = 0
            labelDim = 2
            labelMappingFile = "$DataDir$/labelsmap.txt"
        ]
    ]
     
]

Test = [
    action = "test"
    # Set minibatch size for testing.
    minibatchSize = 16

    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/Test_cntk_text.txt"
        input = [
            features = [
                dim = 3072
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]    
]
DumpNodeInfo = [
    action = "dumpNode"
	modelPath="$ModelDir$/01_Convolution.15"
#	nodeName=h2.W
    printValues = true
]